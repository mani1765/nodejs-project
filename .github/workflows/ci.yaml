name: NodeJs Project

on:
  push:
    branches:
      - main

env:
  VERSION: $(( $(cat version.txt) + 1 ))

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

  sonarqube_sast_scan:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job runs first

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Keep this if you need full git history for SonarQube

      - name: SonarQube Scan # make sure sonar-project.properties is present at root of the project
        uses: sonarsource/sonarqube-scan-action@v2  # Use stable version
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  snyk_sca_scan:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job runs first

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Snyk Authentication
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Commit and push Snyk report to repository
        run: |
          git config --global user.name "mani1765"
          git config --global user.email "gmanikanta.0528@gmail.com"
          git checkout -b snyk-report
          mkdir -p snyk-reports
          mv snyk.sarif snyk-reports/
          git add snyk-reports/snyk.sarif
          git commit -m "Add Snyk vulnerability report"
          git push --set-upstream origin snyk-report
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  build_docker_image_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job runs first

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t mani1765/nodejs-project:${{ env.VERSION }} .

      - name: Tag Docker image
        run: docker tag mani1765/nodejs-project:${{ env.VERSION }} mani1765/nodejs-project:${{ env.VERSION }}

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push mani1765/nodejs-project:${{ env.VERSION }}

      - name: Pull Docker image from Docker Hub
        run: |
         docker pull mani1765/nodejs-project:${{ env.VERSION }}
         docker save -o vuln-image.tar mani1765/nodejs-project:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
           input: vuln-image.tar
           exit-code: '0'
           severity: 'CRITICAL,HIGH'

  Update_k8_files:
    runs-on: ubuntu-latest
    needs: ["build","build_docker_image_and_push_to_docker_hub" ] # Ensure the build job runs first

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Git config
        run: |
          git config --global user.name "mani1765"
          git config --global user.email "gmanikanta.0528@gmail.com"  

      - name: Update k8s deployment yaml file for frontend
        run: |
          git pull
          sed -i "s|image: mani1765/nodejs-project:.*$|image: mani1765/nodejs-project:${{ env.VERSION }}|" k8s-project-ingress/app/app-deployment.yaml
          echo ${{ env.VERSION }} > version.txt
          CURRENT_VERSION=$(cat version.txt)    
          git add k8s-project-inngress/app/app-deployment.yaml version.txt
          git commit -m "Updated deployment yaml and version txt file with nodejs image tag to ${CURRENT_VERSION}"
          git push  
